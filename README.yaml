---
#
# This is the canonical configuration for the `README.md`
# Run `make readme` to rebuild the `README.md`
#

# Name of this project
name : Terraform DigitalOcean SSL Certificate

# License of this project
license: "APACHE"

# Canonical GitHub repo
github_repo: terraform-do-modules/terraform-digitalocean-certificate

# Badges to display
badges:
  - name: "Latest Release"
    image: "https://img.shields.io/github/release/terraform-do-modules/terraform-digitalocean-certificate.svg"
    url: "https://github.com/terraform-do-modules/terraform-digitalocean-certificate/releases/latest"
  - name: "tfsec"
    image: "https://github.com/terraform-do-modules/terraform-digitalocean-certificate/actions/workflows/tfsec.yml/badge.svg"
    url: "https://github.com/terraform-do-modules/terraform-digitalocean-certificate/actions/workflows/tfsec.yml"
  - name: "Licence"
    image: "https://img.shields.io/badge/License-APACHE-blue.svg"
    url: "LICENSE.md"

prerequesties:
  - name: Terraform 1.5.4
    url: https://learn.hashicorp.com/terraform/getting-started/install.html

#  description of this project
description: |-
  Provides a DigitalOcean Certificate resource that allows you to manage certificates.

# extra content
include:
  - "terraform.md"

# How to use this project
usage : |-
  Here are examples of how you can use this module in your inventory structure:
  ### custom-certificate
  ```hcl
      module "custom_certificate" {
      source             = "terraform-do-modules/certificate/digitalocean"
      version            = "1.0.0"
      certificate_name   = "test"
      private_key        = "./../../private_key.pem"
      leaf_certificate   = "./../../cert.pem"
      certificate_chain  = "./../../fullchain.pem"
    }
  ```
  ### lets-encrypt-certificate
  ```hcl
      module "lets_encrypt_certificate" {
      source                   = "terraform-do-modules/certificate/digitalocean"
      version                  = "1.0.0"
      certificate_name         = "test"
      domain_names             = ["clouddrove.ca"]
    }
  ```